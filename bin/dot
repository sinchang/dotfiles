source ~/.dotfiles/commands/helpers

function display_help {
  echo "$(cat $DOTFILES/bin/docs/dot | groff -Tascii -man)" | more
}

function is_cmd {
  if [[ $1 -eq $2 ]] || [[ -z $3 && $1 -eq $3 ]]; then
    return 1
  fi

  return 0
}

function do_install {
  if [[ -z $1 ]]; then
    echo "$(cat $DOTFILES/bin/docs/dot-install | groff -Tascii -man)" | more
  fi

  local package=$2

  case $1 in
    cask|c)
      brew cask install "$package"
      if [ $? -eq 0 ]; then
        gsed -i.bak "\$s/$/\n$package/" $CASK_PACKAGES
      fi
      ;;
    brew|b)
      brew install "$package"
      if [ $? -eq 0 ]; then
        gsed -i.bak "\$s/$/\n$package/" $BREW_PACKAGES
      fi
      ;;
    code|co)
      code --install-extension "$package"
      if [ $? -eq 0 ]; then
        gsed -i.bak "\$s/$/\n$package/" $CODE_PACKAGES
      fi
      ;;
    mas|m)
      mas install "$package"
      if [ $? -eq 0 ]; then
        gsed -i.bak "\$s/$/\n$package/" $MAS_PACKAGES
      fi
      ;;
    pip|p)
      workon venv
      pip install "$package"
      if [ $? -eq 0 ]; then
        gsed -i.bak "\$s/$/\n$package/" $PIP_PACKAGES
      fi
      ;;
    go|g)
      go get "$package"
      if [ $? -eq 0 ]; then
        gsed -i.bak "\$s~$~\n$package~" $GO_PACKAGES
      fi
      ;;
    npm|n)
      npm install -g "$package"
      if [ $? -eq 0 ]; then
        gsed -i.bak "\$s/$/\n$package/" $NPM_PACKAGES
      fi
      ;;
  esac
}

function do_uninstall {
  local package=$2

  case $1 in
    cask|c)
      gsed -i.bak "/$package/d" $CASK_PACKAGES
      brew cask uninstall "$package"
      ;;
    brew|b)
      gsed -i.bak "/$package/d" $BREW_PACKAGES
      brew uninstall "$package"
      ;;
    code|co)
      gsed -i.bak "/$package/d" $CODE_PACKAGES
      code --uninstall-extension "$package"
      ;;
    mas|m)
      gsed -i.bak "/$package/d" $MAS_PACKAGES
      echo "Removed from dotfiles, please uninstall manually"
      ;;
    pip|p)
      gsed -i.bak "/$package/d" $PIP_PACKAGES
      workon venv
      pip uninstall "$package"
      ;;
    go|g)
      gsed -i.bak "/${package//\//\\/}/d" $GO_PACKAGES
      go clean -i "$package"
      ;;
    npm|n)
      gsed -i.bak "/$package/d" $NPM_PACKAGES
      npm uninstall -g "$package"
      ;;
  esac
}

# Commands

if [ -z $1 ] || [[ $1 == "help" ]] || [[ $1 == "h" ]]; then
  display_help
fi

if [[ $1 == "install" ]] || [[ $1 == "i" ]]; then
  do_install $2 $3
fi

if [[ $1 == "uninstall" ]] || [[ $1 == "u" ]]; then
  do_uninstall $2 $3
fi
