path_append() {
  for ARG in "$@"
  do
    if [ -d "$ARG" ] && [[ ":$PATH:" != *":$ARG:"* ]]; then
        PATH="${PATH:+"$PATH:"}$ARG"
    fi
  done
}

path_prepend() {
  for ((i=$#; i>0; i--));
  do
    ARG=${!i}
    if [ -d "$ARG" ] && [[ ":$PATH:" != *":$ARG:"* ]]; then
        PATH="$ARG${PATH:+":$PATH"}"
    fi
  done
}

dataurl() {
  local mimetype=$(file -b --mime-type "$1");
  if [[ $mimetype == text/* ]]; then
    mimetype="${mimetype};charset=utf-8";
  fi

  echo "data:${mimetype};base64,$(openssl base64 -in "$1" | tr -d '\n')";
}

gitio() {
  if [ -z "${1}" -o -z "${2}" ]; then
    echo "Usage: \`gitio slug url\`";
    return 1;
  fi

  curl -i https://git.io/ -F "url=${2}" -F "code=${1}";
}

server() {
  local port="${1:-8000}";
  sleep 1 && open "http://localhost:${port}/" &

  # Use text/plain
  # Use utf8
  python -c $'import SimpleHTTPServer;\nmap = SimpleHTTPServer.SimpleHTTPRequestHandler.extensions_map;\nmap[""] = "text/plain";\nfor key, value in map.items():\n\tmap[key] = value + ";charset=UTF-8";\nSimpleHTTPServer.test();' "$port";
}

gz() {
  local osize=$(wc -c < "$1");
  local gsize=$(gzip -c "$1" | wc -c);
  local ratio=$(echo "$gsize * 100 / $osize" | bc -l);

  printf "orig: %d bytes\n" "$osize";
  printf "gzip: %d bytes (%2.2f%%)\n" "$gsize" "$ratio";
}

c() {
  if [ $# -eq 0 ]; then
    code .;
  else
    code "$@";
  fi
}

# Go
gopath() {
  local basename=$(basename $PWD)
  cd ~/go/src/github.com/DMarby/$basename
}

p() {
  if [ $# -eq 0 ]; then
    cd $HOME/Projects;
  else
    cd "$HOME/Projects/$@";
  fi
}

klein() {
  local url="https://dmar.by/"
  local key=$(cat $HOME/.klein)

  if [[ -z "$1" ]]; then
    echo "$0 [url] [alias?]" >&2
  else
    local output

    if [[ -n "$2" ]]; then
      output=$(echo -n "$1" | tr -d '\n' | curl -s -X POST -F "alias=$(basename "$2")" -F "key=${key}" -F 'url=<-' "$url")
    else
      output=$(echo -n "$1" | tr -d '\n' | curl -s -X POST -F "key=${key}" -F 'url=<-' "$url")
    fi

    if [[ $output == http* ]]; then
      echo -n $output | pbcopy
    fi

    echo $output
  fi
}
